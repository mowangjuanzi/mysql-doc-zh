import{_ as e,o as a,c as o,z as t,a as i}from"./chunks/framework.95b9d657.js";const u=JSON.parse('{"title":"第 8 章 优化","description":"","frontmatter":{},"headers":[],"relativePath":"zh/optimization.md","filePath":"zh/optimization.md"}'),n={name:"zh/optimization.md"},s=t("h1",{id:"第-8-章-优化",tabindex:"-1"},[i("第 8 章 优化 "),t("a",{class:"header-anchor",href:"#第-8-章-优化","aria-label":'Permalink to "第 8 章 优化"'},"​")],-1),r=t("p",null,"本章介绍了如何优化 MySQL 性能并提供示例。优化包含在多个级别上配置, 调优和度量性能。根据工作角色（开发者、DBA、或者两者的组合），可以在单个 SQL 语句，整个应用程序，单个数据库或者多个联网数据库服务器级别进行优化。有时可以主动并提前计划性能，而有时可能会在出现问题解决配置或者代码问题。优化 CPU 和内存使用也可以提高可伸缩性，允许数据库在不减速的情况下处理更多的负载。",-1),c=[s,r];function d(_,p,l,h,m,f){return a(),o("div",null,c)}const x=e(n,[["render",d]]);export{u as __pageData,x as default};
