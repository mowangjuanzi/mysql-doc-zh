import{_ as s,o as a,c as e,U as n}from"./chunks/framework.76b79cb5.js";const d=JSON.parse('{"title":"3.5 Using mysql in Batch Mode","description":"","frontmatter":{},"headers":[],"relativePath":"en/batch-mode.md","filePath":"en/batch-mode.md"}'),o={name:"en/batch-mode.md"},t=n(`<h1 id="_3-5-using-mysql-in-batch-mode" tabindex="-1">3.5 Using mysql in Batch Mode <a class="header-anchor" href="#_3-5-using-mysql-in-batch-mode" aria-label="Permalink to &quot;3.5 Using mysql in Batch Mode&quot;">​</a></h1><p>In the previous sections, you used <a href="./mysql.html"><code>mysql</code></a> interactively to enter statements and view the results. You can also run <a href="./mysql.html"><code>mysql</code></a> in batch mode. To do this, put the statements you want to run in a file, then tell <a href="./mysql.html"><code>mysql</code></a> to read its input from the file:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">batch-file</span></span></code></pre></div><p>If you are running <a href="./mysql.html"><code>mysql</code></a> under Windows and have some special characters in the file that cause problems, you can do this:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">C:\\&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">source batch-file</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><p>If you need to specify connection parameters on the command line, the command might look like this:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-h</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">host</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-u</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">user</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">batch-file</span></span>
<span class="line"><span style="color:#FFCB6B;">Enter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">password:</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">********</span></span></code></pre></div><p>When you use <a href="./mysql.html"><code>mysql</code></a> this way, you are creating a script file, then executing the script.</p><p>If you want the script to continue even if some of the statements in it produce errors, you should use the <a href="./mysql-command-options.html#option_mysql_force"><code>--force</code></a> command-line option.</p><p>Why use a script? Here are a few reasons:</p><ul><li><p>If you run a query repeatedly (say, every day or every week), making it a script enables you to avoid retyping it each time you execute it.</p></li><li><p>You can generate new queries from existing ones that are similar by copying and editing script files.</p></li><li><p>Batch mode can also be useful while you&#39;re developing a query, particularly for multiple-line statements or multiple-statement sequences. If you make a mistake, you don&#39;t have to retype everything. Just edit your script to correct the error, then tell <a href="./mysql.html"><code>mysql</code></a> to execute it again.</p></li><li><p>If you have a query that produces a lot of output, you can run the output through a pager rather than watching it scroll off the top of your screen:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">batch-file</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">more</span></span></code></pre></div></li><li><p>You can catch the output in a file for further processing:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">batch-file</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql.out</span></span></code></pre></div></li><li><p>You can distribute your script to other people so that they can also run the statements.</p></li><li><p>Some situations do not allow for interactive use, for example, when you run a query from a <code>cron</code> job. In this case, you must use batch mode.</p></li></ul><p>The default output format is different (more concise) when you run <a href="./mysql.html"><code>mysql</code></a> in batch mode than when you use it interactively. For example, the output of <code>SELECT DISTINCT species FROM pet</code> looks like this when <a href="./mysql.html"><code>mysql</code></a> is run interactively:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">+</span><span style="color:#676E95;font-style:italic;">---------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| species |</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#676E95;font-style:italic;">---------+</span></span>
<span class="line"><span style="color:#A6ACCD;">| bird    |</span></span>
<span class="line"><span style="color:#A6ACCD;">| cat     |</span></span>
<span class="line"><span style="color:#A6ACCD;">| dog     |</span></span>
<span class="line"><span style="color:#A6ACCD;">| hamster |</span></span>
<span class="line"><span style="color:#A6ACCD;">| snake   |</span></span>
<span class="line"><span style="color:#89DDFF;">+</span><span style="color:#676E95;font-style:italic;">---------+</span></span></code></pre></div><p>In batch mode, the output looks like this instead:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">species</span></span>
<span class="line"><span style="color:#A6ACCD;">bird</span></span>
<span class="line"><span style="color:#A6ACCD;">cat</span></span>
<span class="line"><span style="color:#A6ACCD;">dog</span></span>
<span class="line"><span style="color:#A6ACCD;">hamster</span></span>
<span class="line"><span style="color:#A6ACCD;">snake</span></span></code></pre></div><p>If you want to get the interactive output format in batch mode, use <a href="./mysql.html"><code>mysql -t</code></a>. To echo to the output the statements that are executed, use <a href="./mysql.html"><code>mysql -v</code></a>.</p><p>You can also use scripts from the <a href="./mysql.html"><code>mysql</code></a> prompt by using the <code>source</code> command or <code>\\.</code> command:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">mysql</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> source </span><span style="color:#F78C6C;">filename</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">mysql</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> \\. </span><span style="color:#F78C6C;">filename</span></span></code></pre></div><p>See <a href="./mysql-batch-commands.html">Section 4.5.1.5, “Executing SQL Statements from a Text File”</a>, for more information.</p>`,19),l=[t];function p(c,r,i,y,h,m){return a(),e("div",null,l)}const C=s(o,[["render",p]]);export{d as __pageData,C as default};
